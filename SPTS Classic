local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

local Window = WindUI:CreateWindow({
    Title = "Snowzinn Hub",
    Icon = "rbxassetid://105126431379307",
    Author = "made by snowbrkkk",
    Folder = "CloudHub",
    Size = UDim2.fromOffset(460, 260),
    Transparent = true,
    Theme = "Dark",
    Resizable = true,
    SideBarWidth = 200,
    Background = "", -- rbxassetid only
    BackgroundImageTransparency = 0.42,
    HideSearchBar = true,
    ScrollBarEnabled = false,
    User = {
        Enabled = true,
        Anonymous = false,
        Callback = function()
            print("clicked")
        end,
    },
    KeySystem = { -- <- ↓ remove this all, if you dont neet the key system
        Key = { "STPS", "SOR" },
        Note = "Key: STPS",
        Thumbnail = {
            Image = "rbxassetid://",
            Title = "rbxassetid://105126431379307",
        },
        URL = "STPS",
        SaveKey = nil,
    },
})

local Tab = Window:Tab({
    Title = "Auto farm",
    Icon = "",
    Locked = false,
})

local Section = Tab:Section({ 
    Title = "Auto Click",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

local running = false
local loopThread = nil

local Toggle = Tab:Toggle({
    Title = "Auto Train Body",
    Desc = "",
    Icon = "circle",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        print("Toggle Activated: " .. tostring(state))
        running = state

        if running then
            loopThread = task.spawn(function()
                while running do
                    local args = {
	{
		"+BT1"
	}
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
                    task.wait(0.2) -- intervalo entre execuções
                end
            end)
        end
    end
})

local running = false
local toggleThread = nil

local Toggle = Tab:Toggle({
    Title = "Auto walk",
    Desc = "",
    Icon = "circle",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        print("Toggle Activated: " .. tostring(state))
        running = state

        if running then
            toggleThread = task.spawn(function()
                while running do
                    local args = {
                        {
                            "Add_MS_Request"
                        }
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
                    task.wait(0.2)
                end
            end)
        end
    end
})

local running = false
local loopThread = nil

local Toggle = Tab:Toggle({
    Title = "Auto Punch",
    Desc = "",
    Icon = "circle",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        print("Toggle Activated: " .. tostring(state))
        running = state

        if running then
            loopThread = task.spawn(function()
                while running do
                    local args = {
	{
		"Add_FS_Request"
	}
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
                    task.wait(0.2) -- intervalo entre execuções
                end
            end)
        end
    end
})

local Toggle = Tab:Toggle({
    Title = "Auto Jump",
    Desc = "",
    Icon = "circle",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        print("Toggle Activated: " .. tostring(state))
        running = state

        if running then
            loopThread = task.spawn(function()
                while running do
                    local args = {
	{
		"Add_JF_Request"
	}
}
game:GetService("ReplicatedStorage"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
                    task.wait(0.2) -- intervalo entre execuções
                end
            end)
        end
    end
})

local Section = Tab:Section({ 
    Title = "Other",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

local Button = Tab:Button({
    Title = "Anti-Afk",
    Desc = "",
    Locked = false,
    Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/snowbrkkkk/snow/refs/heads/main/Anti-afk"))()
        print("clicked")
    end
})

local running = false
local loadedScript = nil

local Toggle = Tab:Toggle({
    Title = "FE INVISIBLE",
    Desc = "Ativa ou desativa a interface invisível",
    Icon = "eye",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        if state and not running then
            running = true
            -- Executa o script
            loadedScript = loadstring(game:HttpGet("https://raw.githubusercontent.com/snowbrkkkk/main/refs/heads/main/Invisible_GUI"))()
        elseif not state and running then
            running = false
            -- Tenta remover o efeito, se possível
            if loadedScript and typeof(loadedScript) == "Instance" then
                loadedScript:Destroy()
            elseif typeof(loadedScript) == "function" then
                pcall(loadedScript) -- caso o script retornasse uma função de "desativar"
            end
        end
    end
})

local Tab = Window:Tab({
    Title = "Teleports",
    Icon = "map",
})

-- ▼ Tabelas de posições
local FTLocations = {
    ["Rock (100+)"] = Vector3.new(402.67, 271.70, 979.27),
    ["The Crystal (Leaderboard)"] = Vector3.new(-2272.55, 1943.37, 1048.90),
    ["Blue God Star (1b+)"] = Vector3.new(1175.35, 4789.26, -2292.40),
    ["Green God Star (100b+)"] = Vector3.new(1380.13, 9272.82, 1641.60),
    ["Red God Star (1T+)"] = Vector3.new(-368.31, 15735.01, -15.02),
}

local BTLocations = {
    ["Ice Bath (100+)"] = Vector3.new(366.72, 249.73, -444.15),
    ["Fire Bath (10K)"] = Vector3.new(356.82, 263.77, -497.07),
    ["Iceberg (100K)"] = Vector3.new(1636.42, 266.86, 2245.14),
    ["Tornado (1M)"] = Vector3.new(-2297.71, 977.02, 1074.17),
    ["Volcano (10M)"] = Vector3.new(-2028.03, 714.27, -1883.54),
}

-- ▼ Função para extrair nomes
local function getKeys(tbl)
    local keys = {}
    for k in pairs(tbl) do
        table.insert(keys, k)
    end
    return keys
end

-- ▼ Dropdown FT
Tab:Dropdown({
    Title = "FT Locations",
    Desc = "Treinos de Força",
    Values = getKeys(FTLocations),
    Multi = false,
    AllowNone = true,
    Callback = function(selected)
        local pos = FTLocations[selected]
        if pos and game.Players.LocalPlayer.Character then
            local root = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if root then
                root.CFrame = CFrame.new(pos)
            end
        end
    end
})

-- ▼ Dropdown BT
Tab:Dropdown({
    Title = "BT Locations",
    Desc = "Treinos de Corpo",
    Values = getKeys(BTLocations),
    Multi = false,
    AllowNone = true,
    Callback = function(selected)
        local pos = BTLocations[selected]
        if pos and game.Players.LocalPlayer.Character then
            local root = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if root then
                root.CFrame = CFrame.new(pos)
            end
        end
    end
})
